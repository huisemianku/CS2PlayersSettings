@page
@model CS2PlayersSettings.Pages.PlayerFile.PlayerGameSettingsModel
@{
}
<div class="w-[970px] mx-auto">
    <header class="w-full bg-white rounded-xl h-15 flex items-center justify-center py-4 shadow-sm">
        <div class="text-center">
            <h1 class="text-2xl font-bold text-gray-800">@Model.PlayerNickName 游戏设置</h1>
        </div>
    </header>
    <section class="w-full mx-auto mt-5">
        <!-- 鼠标设置卡片 -->
        <div class="bg-white rounded-xl shadow-md p-7 mb-6 border border-gray-100">
            <!-- 卡片标题 -->
            <div class="flex items-center mb-7">
                <svg class="h-6 w-6 text-gray-800" fill="none" viewBox="0 0 24 24" stroke-width="1.8"
                    stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round"
                        d="M15.042 21.672L13.684 16.6m0 0l-2.51 2.225.569-9.47 5.227 7.917-3.286-.672zm-7.518-.267A8.25 8.25 0 1120.25 10.5M8.288 14.212A5.25 5.25 0 1117.25 10.5" />
                </svg>
                <h2 class="ml-2.5 text-xl font-bold text-gray-900 tracking-tight">Mouse Settings</h2>
            </div>
            <input type="hidden" asp-for="@Model.MouseSettings.MouseId" />
            <input type="hidden" asp-for="@Model.MouseSettings.PlayerId" />
            <!-- 鼠标产品信息 -->
            <div
                class="flex flex-col md:flex-row items-center justify-between bg-gray-50 rounded-lg p-5 mb-7 border border-gray-100">
                <div class="flex items-center mb-4 md:mb-0 w-full">
                    <div class="mr-4 flex-shrink-0">
                        <div class="w-12 h-12 bg-red-600 rounded-md flex items-center justify-center">
                            <svg class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"
                                    d="M5 3a2 2 0 012-2h10a2 2 0 012 2v2a2 2 0 01-2 2H7a2 2 0 01-2-2V3z" />
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"
                                    d="M12 7v10m0 0l-3-3m3 3l3-3" />
                            </svg>
                        </div>
                    </div>
                    <div class="flex-grow">
                        <div class="mb-1">
                            <input type="text" asp-for="@Model.MouseSettings.MouseName"
                                class="w-full font-bold text-gray-900 bg-transparent border border-gray-300 rounded-md px-3 py-1.5 focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent">
                        </div>
                        <p class="text-sm text-gray-500 mt-0.5">Professional Gaming Mouse</p>
                    </div>
                </div>
                <div class="flex-shrink-0 ml-0 md:ml-4">
                    <div
                        class="flex items-center px-3 py-1.5 bg-gray-50 text-gray-600 text-sm rounded-full border border-gray-100">
                        <svg class="w-4 h-4 mr-1.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                        </svg>
                        <time class="font-medium">最后更新时间：@Model.MouseSettings.MouseLastUpdateTime</time>
                        <input type="hidden" asp-for="@Model.MouseSettings.MouseLastUpdateTime" />
                    </div>
                </div>
            </div>

            <form id="mouseSettingsForm" class="mb-6">
                @Html.AntiForgeryToken()
                <!-- 鼠标设置参数表格 -->
                <div class="grid grid-cols-2 md:grid-cols-3 gap-x-10 gap-y-8 mb-8">
                    <!-- DPI -->
                    <div
                        class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-blue-500 before:rounded-full">
                        <label for="dpi" class="text-sm font-medium text-gray-500 mb-1 block">DPI</label>
                        <input type="number" asp-for="@Model.MouseSettings.MouseDpi" min="400" max="25600" step="50"
                            class="w-full text-lg font-semibold text-gray-900 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                    </div>

                    <!-- Sensitivity -->
                    <div
                        class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-green-500 before:rounded-full">
                        <label for="sensitivity"
                            class="text-sm font-medium text-gray-500 mb-1 block">Sensitivity</label>
                        <input type="number" asp-for="@Model.MouseSettings.MouseSensitivity" min="0.1" max="10"
                            step="0.001"
                            class="w-full text-lg font-semibold text-gray-900 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent" />
                    </div>

                    <!-- eDPI -->
                    <div
                        class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-purple-500 before:rounded-full">
                        <label for="edpi" class="text-sm font-medium text-gray-500 mb-1 block">eDPI</label>
                        <input type="number" asp-for="@Model.MouseSettings.MouseEdpi" min="100" max="5000" step="0.01"
                            class="w-full text-lg font-semibold text-gray-900 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent" />
                    </div>

                    <!-- Zoom Sensitivity -->
                    <div
                        class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-orange-500 before:rounded-full">
                        <label for="zoomSensitivity" class="text-sm font-medium text-gray-500 mb-1 block">Zoom
                            Sensitivity</label>
                        <input type="number" asp-for="@Model.MouseSettings.MouseZoomSensitivity" min="0.1" max="5"
                            step="0.1"
                            class="w-full text-lg font-semibold text-gray-900 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent" />
                    </div>

                    <!-- Hz -->
                    <div
                        class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-red-500 before:rounded-full">
                        <label for="hz" class="text-sm font-medium text-gray-500 mb-1 block">Hz</label>
                        <select asp-for="@Model.MouseSettings.MouseHz"
                            asp-items="@(new SelectList(new[] { 1000, 2000, 4000, 8000 }))"
                            class="w-full text-lg font-semibold text-gray-900 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent">
                        </select>
                    </div>

                    <!-- Windows Sensitivity -->
                    <div
                        class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-teal-500 before:rounded-full">
                        <label for="windowsSensitivity" class="text-sm font-medium text-gray-500 mb-1 block">Windows
                            Sensitivity</label>
                        <select asp-for="@Model.MouseSettings.WindowsSensitivity"
                            asp-items="@(new SelectList(new[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }))"
                            class="w-full text-lg font-semibold text-gray-900 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-teal-500 focus:border-transparent">
                        </select>
                    </div>
                </div>
                <!-- 保存按钮 -->
                <div class="flex justify-end">
                    <button id="btnSaveMouseSettings" type="submit"
                        class="cursor-pointer px-5 py-2.5 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-md transition-colors flex items-center">
                        <svg class="h-5 w-5 mr-1.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                        </svg>
                        保存设置
                    </button>
                </div>
            </form>
        </div>

        <!-- 准星设置卡片 -->
        <div class="bg-white rounded-xl shadow-md p-7 mb-6 border border-gray-100">
            <!-- 卡片标题 -->
            <div class="flex items-center mb-7">
                <svg class="h-6 w-6 text-gray-800" fill="none" viewBox="0 0 24 24" stroke-width="1.8"
                    stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12" />
                </svg>
                <h2 class="ml-2.5 text-xl font-bold text-gray-900 tracking-tight">Crosshair Settings</h2>
            </div>

            <!-- 准星预览 -->
            <div class="mb-8">
                <div class="flex items-center justify-between mb-2">
                    <h3 class="text-sm font-medium text-gray-700">准星预览</h3>
                    <div class="flex gap-2">
                        <button type="button"
                            class="map-button px-3 py-1 text-sm bg-gray-100 text-gray-700 rounded-md transition-colors">Inferno</button>
                        <button type="button"
                            class="map-button px-3 py-1 text-sm bg-gray-100 text-gray-700 rounded-md transition-colors">Nuke</button>
                        <button type="button"
                            class="map-button px-3 py-1 text-sm bg-gray-100 text-gray-700 rounded-md transition-colors">Dust2</button>
                    </div>
                </div>
                <div
                    class="bg-[url('/Image/Inferno.png')] bg-cover bg-center w-full h-48 rounded-lg flex items-center justify-center relative">
                    <!-- 十字准星预览 -->
                    <div id="crosshairPreview" class="absolute" style="width: 20px; height: 20px;">
                        <div class="absolute bg-green-500"
                            style="left: 50%; top: 0; width: 1px; height: 100%; transform: translateX(-50%);"></div>
                        <div class="absolute bg-green-500"
                            style="top: 50%; left: 0; height: 1px; width: 100%; transform: translateY(-50%);"></div>
                    </div>
                </div>
            </div>

            <!-- 准星参数显示 -->
            <div class="grid grid-cols-2 md:grid-cols-4 gap-x-10 gap-y-8 mb-8">
                <!-- Style -->
                <div
                    class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-blue-500 before:rounded-full">
                    <label class="text-sm font-medium text-gray-500 mb-1 block">Style</label>
                    <div class="w-full text-lg font-semibold text-gray-900 py-2" data-field="CrosshairStyle">
                        @Model.CrosshairSettings.CrosshairStyle</div>
                </div>

                <!-- Thickness -->
                <div
                    class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-green-500 before:rounded-full">
                    <label class="text-sm font-medium text-gray-500 mb-1 block">Thickness</label>
                    <div class="w-full text-lg font-semibold text-gray-900 py-2" data-field="CrosshairThickness">
                        @Model.CrosshairSettings.CrosshairThickness</div>
                </div>

                <!-- Gap -->
                <div
                    class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-purple-500 before:rounded-full">
                    <label class="text-sm font-medium text-gray-500 mb-1 block">Gap</label>
                    <div class="w-full text-lg font-semibold text-gray-900 py-2" data-field="CrosshairGap">
                        @Model.CrosshairSettings.CrosshairGap</div>
                </div>

                <!-- Length -->
                <div
                    class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-yellow-500 before:rounded-full">
                    <label class="text-sm font-medium text-gray-500 mb-1 block">Size</label>
                    <div class="w-full text-lg font-semibold text-gray-900 py-2" data-field="CrosshairSize">
                        @Model.CrosshairSettings.CrosshairSize</div>
                </div>

                <!-- Color Settings -->
                <div
                    class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-red-500 before:rounded-full">
                    <label class="text-sm font-medium text-gray-500 mb-1 block">Red</label>
                    <div class="w-full text-lg font-semibold text-gray-900 py-2" data-field="CrosshairColorRed">
                        @Model.CrosshairSettings.CrosshairColorRed</div>
                </div>

                <div
                    class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-green-500 before:rounded-full">
                    <label class="text-sm font-medium text-gray-500 mb-1 block">Green</label>
                    <div class="w-full text-lg font-semibold text-gray-900 py-2" data-field="CrosshairColorGreen">
                        @Model.CrosshairSettings.CrosshairColorGreen</div>
                </div>

                <div
                    class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-blue-500 before:rounded-full">
                    <label class="text-sm font-medium text-gray-500 mb-1 block">Blue</label>
                    <div class="w-full text-lg font-semibold text-gray-900 py-2" data-field="CrosshairColorBlue">
                        @Model.CrosshairSettings.CrosshairColorBlue</div>
                </div>
            </div>

            <!-- 准星代码输入 -->
            <div class="mt-8">
                <div class="bg-gray-50 p-4 rounded-lg">
                    <label class="text-sm font-medium text-gray-700 mb-2 block">Crosshair Code</label>
                    <form class="flex items-center gap-4">
                        @Html.AntiForgeryToken()
                        <div class="relative flex-1">
                            <input type="hidden" asp-for="@Model.CrosshairSettings.CrosshairId" />
                            <input type="hidden" asp-for="@Model.CrosshairSettings.PlayerId" />
                            <input type="text" asp-for="@Model.CrosshairSettings.CrosshairCode"
                                class="w-full font-mono text-sm bg-white border border-gray-300 rounded-md pl-3 pr-24 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                            <button type="button" id="copyCrosshairCode"
                                class="absolute right-2 top-1/2 -translate-y-1/2 text-sm text-blue-600 hover:text-blue-700 flex items-center cursor-pointer">
                                <div
                                    class="copy-tooltip absolute bottom-full right-0 mb-2 opacity-0 transition-opacity duration-300 pointer-events-none">
                                    <div class="bg-gray-800 text-white text-xs py-1 px-2 rounded whitespace-nowrap">
                                        复制成功!</div>
                                </div>
                                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z">
                                    </path>
                                </svg>
                                Copy
                            </button>
                        </div>
                        <button type="submit" id="saveCrosshairCode"
                            class="cursor-pointer px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-md transition-colors">
                            保存
                        </button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Viewmodel设置卡片 -->
        <div class="bg-white rounded-xl shadow-md p-7 mb-6 border border-gray-100">
            <!-- 卡片标题 -->
            <div class="flex items-center mb-7">
                <svg class="h-6 w-6 text-gray-800" fill="none" viewBox="0 0 24 24" stroke-width="1.8"
                    stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round"
                        d="M21 7.5l-9-5.25L3 7.5m18 0l-9 5.25m9-5.25v9l-9 5.25M3 7.5l9 5.25M3 7.5v9l9 5.25m0-9v9" />
                </svg>
                <h2 class="ml-2.5 text-xl font-bold text-gray-900 tracking-tight">Viewmodel Settings</h2>
            </div>

            <form id="viewmodelSettingsForm" class="mb-6">
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="@Model.ViewmodelSettings.ViewmodelId" />
                <input type="hidden" asp-for="@Model.ViewmodelSettings.PlayerId" />
                <div class="grid grid-cols-2 md:grid-cols-3 gap-x-10 gap-y-8 mb-8">
                    <!-- FOV -->
                    <div
                        class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-blue-500 before:rounded-full">
                        <label class="text-sm font-medium text-gray-500 mb-1 block">FOV</label>
                        <input type="number" asp-for="@Model.ViewmodelSettings.ViewmodelFov"
                            class="w-full text-lg font-semibold text-gray-900 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                    </div>

                    <!-- Offset X -->
                    <div
                        class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-green-500 before:rounded-full">
                        <label class="text-sm font-medium text-gray-500 mb-1 block">Offset X</label>
                        <input type="number" asp-for="@Model.ViewmodelSettings.ViewmodelOffsetX"
                            class="w-full text-lg font-semibold text-gray-900 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent" />
                    </div>

                    <!-- Offset Y -->
                    <div
                        class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-yellow-500 before:rounded-full">
                        <label class="text-sm font-medium text-gray-500 mb-1 block">Offset Y</label>
                        <input type="number" asp-for="@Model.ViewmodelSettings.ViewmodelOffsetY"
                            class="w-full text-lg font-semibold text-gray-900 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:border-transparent" />
                    </div>

                    <!-- Offset Z -->
                    <div
                        class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-red-500 before:rounded-full">
                        <label class="text-sm font-medium text-gray-500 mb-1 block">Offset Z</label>
                        <input type="number" asp-for="@Model.ViewmodelSettings.ViewmodelOffsetZ"
                            class="w-full text-lg font-semibold text-gray-900 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent" />
                    </div>

                    <!-- Presetpos -->
                    <div
                        class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-purple-500 before:rounded-full">
                        <label class="text-sm font-medium text-gray-500 mb-1 block">Presetpos</label>
                        <input type="number" asp-for="@Model.ViewmodelSettings.ViewmodelPresetpos"
                            class="w-full text-lg font-semibold text-gray-900 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:border-transparent" />
                    </div>
                </div>

                <!-- Viewmodel代码输入框 -->
                <div class="mt-8">
                    <div class="bg-gray-50 p-4 rounded-lg">
                        <label class="text-sm font-medium text-gray-700 mb-2 block">Viewmodel Code</label>
                        <div class="flex items-center gap-4">
                            <div class="relative flex-1">
                                <input type="text" asp-for="@Model.ViewmodelSettings.ViewmodelCode"
                                    class="w-full font-mono text-sm bg-white border border-gray-300 rounded-md pl-3 pr-24 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                                <button type="button" id="copyViewmodelCode"
                                    class="absolute right-2 top-1/2 -translate-y-1/2 text-sm text-blue-600 hover:text-blue-700 flex items-center cursor-pointer">
                                    <div
                                        class="copy-tooltip absolute bottom-full right-0 mb-2 opacity-0 transition-opacity duration-300 pointer-events-none">
                                        <div class="bg-gray-800 text-white text-xs py-1 px-2 rounded whitespace-nowrap">
                                            复制成功!</div>
                                    </div>
                                    <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z">
                                        </path>
                                    </svg>
                                    Copy
                                </button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- 保存按钮 -->
                <div class="flex justify-end">
                    <button id="btnSaveViewmodelSettings" type="submit"
                        class="cursor-pointer px-5 py-2.5 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-md transition-colors flex items-center">
                        <svg class="h-5 w-5 mr-1.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                        </svg>
                        保存设置
                    </button>
                </div>
            </form>
        </div>

        <!-- Video设置卡片 -->
        <div class="bg-white rounded-xl shadow-md p-7 mb-6 border border-gray-100">
            <!-- 卡片标题 -->
            <div class="flex items-center mb-7">
                <svg class="h-6 w-6 text-gray-800" fill="none" viewBox="0 0 24 24" stroke-width="1.8"
                    stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round"
                        d="M6 20.25h12m-7.5-3v3m3-3v3m-10.125-3h17.25c.621 0 1.125-.504 1.125-1.125V4.875c0-.621-.504-1.125-1.125-1.125H3.375c-.621 0-1.125.504-1.125 1.125v11.25c0 .621.504 1.125 1.125 1.125z" />
                </svg>
                <h2 class="ml-2.5 text-xl font-bold text-gray-900 tracking-tight">Video Settings</h2>
            </div>
            <form id="videoSettingsForm" class="mb-6">
                @Html.AntiForgeryToken()
                <input type="hidden" asp-for="@Model.VideoSettings.VideoId" />
                <input type="hidden" asp-for="@Model.VideoSettings.PlayerId" />
                <div class="grid grid-cols-2 md:grid-cols-3 gap-x-10 gap-y-8 mb-8">
                    <!-- Resolution -->
                    <div
                        class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-blue-500 before:rounded-full">
                        <label class="text-sm font-medium text-gray-500 mb-1 block">Resolution</label>
                        <input type="text" asp-for="@Model.VideoSettings.Resolution"
                            class="w-full text-lg font-semibold text-gray-900 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent" />
                    </div>

                    <!-- Aspect Ratio -->
                    <div
                        class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-green-500 before:rounded-full">
                        <label class="text-sm font-medium text-gray-500 mb-1 block">Aspect Ratio</label>
                        <input type="text" asp-for="@Model.VideoSettings.AspectRatio"
                            class="w-full text-lg font-semibold text-gray-900 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent" />
                    </div>

                    <!-- Scaling Mode -->
                    <div
                        class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-yellow-500 before:rounded-full">
                        <label class="text-sm font-medium text-gray-500 mb-1 block">Scaling Mode</label>
                        <select asp-for="@Model.VideoSettings.ScalingMode"
                            class="w-full text-lg font-semibold text-gray-900 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-yellow-500 focus:border-transparent">
                            <option value="Stretched">Stretched</option>
                            <option value="BlackBars">Black Bars</option>
                        </select>
                    </div>

                    <!-- Display Mode -->
                    <div
                        class="relative pl-6 before:absolute before:left-0 before:top-1 before:w-1.5 before:h-10 before:bg-red-500 before:rounded-full">
                        <label class="text-sm font-medium text-gray-500 mb-1 block">Display Mode</label>
                        <select asp-for="@Model.VideoSettings.DisplayMode"
                            class="w-full text-lg font-semibold text-gray-900 border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-red-500 focus:border-transparent">
                            <option value="Fullscreen">Fullscreen</option>
                            <option value="Windowed">Windowed</option>
                        </select>
                    </div>

                </div>

                <!-- 保存按钮 -->
                <div class="flex justify-end">
                    <button id="btnSaveVideoSettings" type="submit"
                        class="cursor-pointer px-5 py-2.5 bg-blue-600 hover:bg-blue-700 text-white font-medium rounded-md transition-colors flex items-center">
                        <svg class="h-5 w-5 mr-1.5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                        </svg>
                        保存设置
                    </button>
                </div>
            </form>
        </div>
    </section>
</div>
<script>
    const csrfToken = document.querySelector('input[name="__RequestVerificationToken"]').value;
    document.addEventListener('DOMContentLoaded', () => {

        // 鼠标设置保存
        document.getElementById('btnSaveMouseSettings').addEventListener('click', async function (e) {
            e.preventDefault();

            const mouseSettings = {
                mouseId: parseInt(document.getElementById("MouseSettings_MouseId").value),
                playerId: parseInt(document.getElementById("MouseSettings_PlayerId").value),
                mouseName: document.getElementById("MouseSettings_MouseName").value,
                mouseDpi: parseFloat(document.getElementById("MouseSettings_MouseDpi").value),
                mouseSensitivity: parseFloat(document.getElementById("MouseSettings_MouseSensitivity").value),
                mouseEdpi: parseFloat(document.getElementById("MouseSettings_MouseEdpi").value),
                mouseZoomSensitivity: parseFloat(document.getElementById("MouseSettings_MouseZoomSensitivity").value),
                mouseHz: parseInt(document.getElementById("MouseSettings_MouseHz").value),
                windowsSensitivity: parseInt(document.getElementById("MouseSettings_WindowsSensitivity").value),
            };

            try {
                const response = await fetch('?handler=UpdateMouse', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': csrfToken
                    },
                    body: JSON.stringify(mouseSettings)
                });

                if (response.ok) {
                    showMsg('success', '鼠标设置已保存');
                } else {
                    showMsg('error', '保存失败，请重试');
                }
            } catch (error) {
                showMsg('error', '保存失败，请重试');
            }
        });


        // DPI和Sensitivity联动计算eDPI
        const dpiInput = document.getElementById('MouseSettings_MouseDpi');
        const sensitivityInput = document.getElementById('MouseSettings_MouseSensitivity');
        const edpiInput = document.getElementById('MouseSettings_MouseEdpi');

        function calculateEDPI() {
            const dpi = parseFloat(dpiInput.value);
            const sensitivity = parseFloat(sensitivityInput.value);
            if (!isNaN(dpi) && !isNaN(sensitivity)) {
                const edpi = (dpi * sensitivity).toFixed(2);
                edpiInput.value = edpi;
            }
        }

        dpiInput.addEventListener('input', calculateEDPI);
        sensitivityInput.addEventListener('input', calculateEDPI);

        // 初始化 Viewmodel 代码
        updateViewmodelCode();

        // 复制功能
        function handleCopy(buttonId, inputId) {
            const copyButton = document.getElementById(buttonId);
            const input = document.getElementById(inputId);
            const tooltip = copyButton.querySelector('.copy-tooltip');

            copyButton.addEventListener('click', function () {
                // 创建临时文本区域
                const textArea = document.createElement('textarea');
                textArea.value = input.value;
                document.body.appendChild(textArea);
                textArea.select();

                try {
                    document.execCommand('copy');
                    // 显示复制成功提示
                    tooltip.style.opacity = '1';

                    // 1.5秒后隐藏提示
                    setTimeout(() => {
                        tooltip.style.opacity = '0';
                    }, 1500);
                } catch (err) {
                    console.error('复制失败:', err);
                }

                // 移除临时文本区域
                document.body.removeChild(textArea);
            });
        }

        // 初始化复制功能
        handleCopy('copyCrosshairCode', 'CrosshairSettings_CrosshairCode');
        handleCopy('copyViewmodelCode', 'ViewmodelSettings_ViewmodelCode');

        // 地图切换功能
        const previewBgs = {
            'Inferno': '/Image/Inferno.png',
            'Nuke': '/Image/NuKe.png',
            'Dust2': '/Image/Dust2.png'
        };

        const mapButtons = document.querySelectorAll('.map-button');

        // 初始化第一个按钮为选中状态
        mapButtons[0].classList.remove('bg-gray-100', 'text-gray-700');
        mapButtons[0].classList.add('bg-blue-500', 'text-white');

        mapButtons.forEach(button => {
            button.addEventListener('click', function () {
                // 如果当前按钮已经是选中状态，则不执行任何操作
                if (this.classList.contains('bg-blue-500')) {
                    return;
                }

                // 移除其他按钮的高亮
                mapButtons.forEach(btn => {
                    btn.classList.remove('bg-blue-500', 'text-white');
                    btn.classList.add('bg-gray-100', 'text-gray-700');
                });

                // 添加当前按钮的高亮
                this.classList.remove('bg-gray-100', 'text-gray-700');
                this.classList.add('bg-blue-500', 'text-white');

                // 更新预览背景
                const map = this.textContent;
                const previewDiv = document.querySelector('#crosshairPreview').parentElement;
                previewDiv.style.backgroundImage = `url(${previewBgs[map]})`;
            });

            // 为选中的按钮添加hover样式
            button.addEventListener('mouseover', function () {
                if (this.classList.contains('bg-blue-500')) {
                    this.style.backgroundColor = '#3b82f6'; // 保持蓝色
                }
            });
        });

        // 更新 Viewmodel 代码
        function updateViewmodelCode() {
            const fov = document.getElementById('ViewmodelSettings_ViewmodelFov').value;
            const offsetX = document.getElementById('ViewmodelSettings_ViewmodelOffsetX').value;
            const offsetY = document.getElementById('ViewmodelSettings_ViewmodelOffsetY').value;
            const offsetZ = document.getElementById('ViewmodelSettings_ViewmodelOffsetZ').value;
            const presetpos = document.getElementById('ViewmodelSettings_ViewmodelPresetpos').value;

            const code = `viewmodel_fov ${fov}; viewmodel_offset_x ${offsetX}; viewmodel_offset_y ${offsetY}; viewmodel_offset_z ${offsetZ}; viewmodel_presetpos ${presetpos};`;
            document.getElementById('ViewmodelSettings_ViewmodelCode').value = code;
        }

        // 监听 Viewmodel 设置变化
        const viewmodelInputs = document.querySelectorAll('[id^="ViewmodelSettings_"]');
        viewmodelInputs.forEach(input => {
            input.addEventListener('input', updateViewmodelCode);
        });

        // Viewmodel设置保存
        document.getElementById('btnSaveViewmodelSettings').addEventListener('click', async function (e) {
            e.preventDefault();

            const viewmodelSettings = {
                playerId: parseInt(document.getElementById('ViewmodelSettings_PlayerId').value),
                ViewmodelId: parseFloat(document.getElementById('ViewmodelSettings_ViewmodelId').value),
                viewmodelFov: parseFloat(document.getElementById('ViewmodelSettings_ViewmodelFov').value),
                viewmodelOffsetX: parseFloat(document.getElementById('ViewmodelSettings_ViewmodelOffsetX').value),
                viewmodelOffsetY: parseFloat(document.getElementById('ViewmodelSettings_ViewmodelOffsetY').value),
                viewmodelOffsetZ: parseFloat(document.getElementById('ViewmodelSettings_ViewmodelOffsetZ').value),
                viewmodelPresetpos: parseInt(document.getElementById('ViewmodelSettings_ViewmodelPresetpos').value)
            };

            try {
                const response = await fetch('?handler=UpdateViewmodel', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': csrfToken
                    },
                    body: JSON.stringify(viewmodelSettings)
                });
                if (response.ok) {
                    showMsg('success', 'Viewmodel设置已保存');
                } else {
                    showMsg('error', '保存失败，请重试');
                }
            } catch (error) {
                showMsg('error', '保存失败，请重试');
            }
        });

        // Video设置保存
        document.getElementById('btnSaveVideoSettings').addEventListener('click', async function (e) {
            e.preventDefault();

            const videoSettings = {
                playerId: parseInt(document.getElementById('VideoSettings_PlayerId').value),
                videoId: parseFloat(document.getElementById('VideoSettings_VideoId').value),
                resolution: document.getElementById('VideoSettings_Resolution').value,
                aspectRatio: document.getElementById('VideoSettings_AspectRatio').value,
                scalingMode: document.getElementById('VideoSettings_ScalingMode').value,
                displayMode: document.getElementById('VideoSettings_DisplayMode').value
            };

            try {
                const response = await fetch('?handler=UpdateVideo', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': csrfToken
                    },
                    body: JSON.stringify(videoSettings)
                });
                if (response.ok) {
                    showMsg('success', '视频设置已保存');
                } else {
                    showMsg('error', '保存失败，请重试');
                }
            } catch (error) {
                showMsg('error', '保存失败，请重试');
            }
        });
    });

    // 添加准星代码保存功能
    document.getElementById('saveCrosshairCode').addEventListener('click', async function (e) {
        e.preventDefault();

        const crosshairSettings = {
            crosshairId: parseInt(document.getElementById('CrosshairSettings_CrosshairId').value),
            playerId: parseInt(document.getElementById('CrosshairSettings_PlayerId').value),
            crosshairCode: document.getElementById('CrosshairSettings_CrosshairCode').value,
            crosshairStyle: document.querySelector('[data-field="CrosshairStyle"]').textContent,
            crosshairThickness: parseFloat(document.querySelector('[data-field="CrosshairThickness"]').textContent),
            crosshairGap: parseFloat(document.querySelector('[data-field="CrosshairGap"]').textContent),
            crosshairSize: parseFloat(document.querySelector('[data-field="CrosshairSize"]').textContent),
            crosshairColorRed: parseInt(document.querySelector('[data-field="CrosshairColorRed"]').textContent),
            crosshairColorGreen: parseInt(document.querySelector('[data-field="CrosshairColorGreen"]').textContent),
            crosshairColorBlue: parseInt(document.querySelector('[data-field="CrosshairColorBlue"]').textContent)
        };

        try {
            const response = await fetch('?handler=UpdateCrosshair', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': csrfToken
                },
                body: JSON.stringify(crosshairSettings)
            });

            if (response.ok) {
                showMsg('success', '准星设置保存成功');
                // 可以在这里更新准星预览
                updateCrosshairPreview();
            } else {
                const errorData = await response.json();
                showMsg('error', '保存失败，请重试');
            }
        } catch (error) {
            console.error('Error:', error);
            showMsg('error', '保存失败，请重试');
        }
    });

    // 添加准星预览更新函数
    function updateCrosshairPreview() {
        const style = document.querySelector('[data-field="CrosshairStyle"]').textContent;
        const thickness = document.querySelector('[data-field="CrosshairThickness"]').textContent;
        const gap = document.querySelector('[data-field="CrosshairGap"]').textContent;
        const size = document.querySelector('[data-field="CrosshairSize"]').textContent;
        const red = document.querySelector('[data-field="CrosshairColorRed"]').textContent;
        const green = document.querySelector('[data-field="CrosshairColorGreen"]').textContent;
        const blue = document.querySelector('[data-field="CrosshairColorBlue"]').textContent;

        const preview = document.getElementById('crosshairPreview');
        const color = `rgb(${red}, ${green}, ${blue})`;

        // 更新准星预览的样式
        preview.querySelectorAll('div').forEach(div => {
            div.style.backgroundColor = color;
            div.style.width = `${thickness}px`;
            div.style.height = `${size}px`;
        });
    }
    // 消息提示
    function showMsg(type, title) {
        const Toast = Swal.mixin({
            toast: true,
            position: "top",
            showConfirmButton: false,
            timer: 1500,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.onmouseenter = Swal.stopTimer;
                toast.onmouseleave = Swal.resumeTimer;
            }
        });
        Toast.fire({
            icon: type,
            title: title
        });
    }
</script>
